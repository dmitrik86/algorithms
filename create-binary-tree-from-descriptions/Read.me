# Create Binary Tree From Descriptions. #

You are given a 2D integer array descriptions where descriptions[i] = [parenti, childi, isLefti] indicates that parenti is the parent of childi in a binary tree of unique values. Furthermore,

If isLefti == 1, then childi is the left child of parenti.
If isLefti == 0, then childi is the right child of parenti.
Construct the binary tree described by descriptions and return its root.

The test cases will be generated such that the binary tree is valid.

## Solution. ##
At first, we can build inEdges and outEdges hash tables. We can keep a list of parents and children nodes respectively. After that, we can find the root node because the root node does not have a parent. Finally, we can implement DFS and use outEdges to find children of the current node.

## Steps. ##
1. Define hash tables and fill them.
2. Find the root node.
3. Implement DFS. Create the current node. Use outEdges to get children nodes.

Time complexity: O(n).
Space complexity: O(n).