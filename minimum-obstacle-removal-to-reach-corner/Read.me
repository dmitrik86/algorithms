# Minimum Obstacle Removal to Reach Corner.

You are given a 0-indexed 2D integer array grid of size m x n. Each cell has one of two values:

0 represents an empty cell,
1 represents an obstacle that may be removed.
You can move up, down, left, or right from and to an empty cell.

Return the minimum number of obstacles to remove so you can move from the upper left corner (0, 0) to the lower right corner (m - 1, n - 1).

## Solution.

It is possible to represent a grid as a graph. After that, we can use the Dijkstra algorithm to find the cheapest path.

### Steps

1. Build a graph from a grid. Use neighbor cells like nodes with edges.
2. Implement the Dijkstra algorithm to find a path with minimum costs.

Time complexity: O(m∗n).

Space complexity: O(m∗n).